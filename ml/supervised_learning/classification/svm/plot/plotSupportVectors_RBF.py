'''
@author: Peter
@modifier: Jerry
'''
from numpy import *
import matplotlib
import matplotlib.pyplot as plt
from matplotlib.patches import Circle
import os,sys
filepath=os.path.dirname(os.path.dirname(os.path.realpath(__file__)))

def plot_support_vectors(input_point_list,file_name,hand_select_new_point_list=None):

    xcord0 = []
    ycord0 = []
    xcord1 = []
    ycord1 = []
    markers =[]
    colors =[]
    fr = open(file_name)#this file was generated by 2normalGen.py
    for line in fr.readlines():
        lineSplit = line.strip().split('\t')
        xPt = float(lineSplit[0])
        yPt = float(lineSplit[1])
        label = float(lineSplit[2])
        if (label == -1):
            xcord0.append(xPt)
            ycord0.append(yPt)
        else:
            xcord1.append(xPt)
            ycord1.append(yPt)

    fr.close()
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.scatter(xcord0,ycord0, marker='s', s=90)
    ax.scatter(xcord1,ycord1, marker='o', s=50, c='red')
    plt.title('Support Vectors Circled')


    for points in input_point_list:
        #print(points)
        circle = Circle((points[0], points[1]), 0.05, facecolor='none', edgecolor=(0,0.8,0.8), linewidth=3, alpha=0.5)
        ax.add_patch(circle)

    if hand_select_new_point_list is not None:
        for points in hand_select_new_point_list:
            circle = Circle((points[0], points[1]), 0.05, facecolor='none', edgecolor=(0.1,0.1,0.1), linewidth=3, alpha=0.5)
            ax.add_patch(circle)




    #plt.plot([2.3,8.5], [-6,6]) #seperating hyperplane
    #b = -3.75567; w0=0.8065; w1=-0.2761
    #x = arange(-2.0, 12.0, 0.1)
    #y = (-w0*x - b)/w1
    #ax.plot(x,y)
    #ax.axis([-2,12,-8,6])
    plt.show()
    return 0